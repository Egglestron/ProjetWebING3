/**
	


Requete pour a la fois creer l'objet post et le commentaire en relation


**/




INSERT INTO 'objectposts' (ID, ID_User, Date_Post, Url_Media, Description) 


VALUES (NULL, '1', '2025-04-04 00:00:00', NULL, 'salut');



INSERT INTO 'comments' (ID_Object, ID_Post) 

VALUES
(LAST_INSERT_ID(), 8);



/**
	

Requete pour a la fois creer l'objet post et l'event en relation


**/


Insertion
$req = mysqli_prepare($db, "INSERT INTO objectposts (ID_User, Url_Media, Description) VALUES (?, ?, ?)");

mysqli_stmt_bind_param($req, "iss", $id_User, $Url_Media,$description);

mysqli_stmt_execute($req);

$lastid = mysqli_insert_id($db);


$req = mysqli_prepare($db, "INSERT INTO events (ID_Object, Date, Location, Status) VALUES(?, ?, ?, ?)");

mysqli_stmt_bind_param($req, "isss", $lastid, $Date, $Location, $Status);
mysqli_stmt_execute($req);


mysqli_stmt_close($req);





INSERT INTO 'objectposts' (ID, ID_User, Date_Post, Url_Media, Description) 

VALUES (NULL, '1', '2025-04-04 00:00:00', NULL, 'salut');


INSERT INTO 'events' (ID_Object, Date, Location, Status) 

VALUES
(LAST_INSERT_ID(), '2025-04-04 00:00:00', 'Paris, 'Private');


/**
	

Requete pour recuperer tous les posts chronologiquement auquel l'utilisateur X a accès => ID_User2


**/




SELECT DISTINCT o.ID, o.ID_User, us.Firstname, us.Lastname, o.Description, o.Date_Post, e.Date, e.Location, e.Status 
FROM events e, objectposts o, users us 
WHERE o.ID = e.ID_Object AND(
    EXISTS(SELECT * FROM friendships f WHERE f.ID_User1 = o.ID_User 
AND f.ID_User2 = '6' AND f.Status = 'Accepted' 
 AND ((f.Relationship = 'Friend' 
AND e.Status IN ('Public','Friends Only','Network')) 
OR (f.Relationship = 'Pro' 
AND e.Status IN ('Network','Public')))) 
OR (o.ID_User = '6') ) AND us.ID = o.ID_User  ORDER BY o.Date_Post DESC LIMIT 25